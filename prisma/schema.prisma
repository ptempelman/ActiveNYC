generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Post {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    content   String   @db.VarChar(255)
    authorId  String

    @@index([authorId])
}

model User {
    id              String     @id @default(cuid())
    email           String     @unique
    age             Int?
    dateCreated     DateTime   @default(now())
    role            String     @default("user")
    adminOf         Activity[] @relation("ActivityAdmins")
    ratings         Rating[]
    savedActivities Activity[] @relation("SavedActivities")
}

model Activity {
    id                      String     @id @default(cuid())
    name                    String
    address                 String
    description             String     @db.Text
    latitude                Float
    longitude               Float
    websiteUrl              String?
    averageRatingBarSpeed   Float?
    averageRatingMusic      Float?
    averageRatingWorthIt    Float?
    averageRatingExperience Float?
    ratings                 Rating[]
    categories              Category[] @relation
    admins                  User[]     @relation("ActivityAdmins")
    savedByUsers            User[]     @relation("SavedActivities")
}

model Rating {
    id         String   @id @default(cuid())
    barSpeed   Float?
    music      Float?
    worthIt    Float?
    experience Float
    activityId String
    userId     String
    activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
    user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, activityId], name: "userId_activityId")
    @@index([activityId])
    @@index([userId])
}

model Category {
    id         String     @id @default(cuid())
    name       String     @unique
    activities Activity[] @relation
}

model ActivityAdmins {
    A String
    B String

    @@unique([A, B], map: "_ActivityAdmins_AB_unique")
    @@index([B], map: "_ActivityAdmins_B_index")
    @@map("_ActivityAdmins")
}

model ActivityToCategory {
    A String
    B String

    @@unique([A, B], map: "_ActivityToCategory_AB_unique")
    @@index([B], map: "_ActivityToCategory_B_index")
    @@map("_ActivityToCategory")
}

model SavedActivities {
    A String
    B String

    @@unique([A, B], map: "_SavedActivities_AB_unique")
    @@index([B], map: "_SavedActivities_B_index")
    @@map("_SavedActivities")
}
